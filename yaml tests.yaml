



jojoo:
# компактная запись не позволяет ничего вложить внутрь, поэтому модификатор (!) следует использовать в ключах
# но если мы описываем условия, то не ясно к чему он относится к ключу или ко всему вложенному

hexQ1:
  (!)tag1: # not(tag1 and tag3 and tag4) # (not(tag1) and tag3 and tag4) - это два абсолютно разных условия.
    tag3:   # можно выкрутится, допустив, что not относится к узлу, а чтобы исключить внутренности, нужно зареджектить каждый элемент
    tag4:   # это может быть реально не удобно, трудно будет искать ошибки в коде запроса
  (!)tag5:
    - tag8:
    - tag9:
  tag2:
    - tag6:
    - tag7:

# При описании условий по связям, придется указывать лейблы - или нет, поскольку это вспомогательная информация и в основе
# заложено, что два объекта могут иметь только одну связь в одном направлении.
# Хотя это похоже на позицию, в других графовых базах есть возможность проводить множественные связи - возможно, это то, что
# упускаю, но я предлагаю выход: дополнительный объект, который образует более конкретный треугольник, вместо 1+ связи.
# "Раскрытие" связи-отношения возможно только при детализации одного или обоих терминалов. Даже встречные связи
# допустимы только, наверное, на мета-уровне (где присутствует обобщение и конкретизация, как минимум, предполагается).

# По всей видимости, надо оставлять компактную запись для связей, использовать модификаторы в ключах, а в условиях
# использовать-таки AND OR NOT - но тогда зачем нам вообще yaml-структура для этого? Может только для условий по связям?

tag.*:
tag:

.obj:
  obj:
  tag:
  tag.*:
    - tag1.*.*:
    - tag2.*:
  .obj2:

.a:
  - .b:
      tag1.*:
      .c:
        - tag3.*:
        - tag4.*:
    

    tag2.*:
  - tag :

.d:
tag6.*: .f
.f:
  tag7: # объекты принадлежащие к тэгу и объекты имеющие сязь с членами тэга -- противоречие

smth:
  smth: # эта запись однозначно говорит о связи - это ПОСТУЛАТ

.r:
  tag9: # .r mapped (or having other relations to tag9) to tag9

tag9.*: # the same but no assignment to variable

.t:
  tag9.*: # .t having relations to tag9 members

  # if additional conditions regarding second terminal is needed, then use another variable ????????? 

# ⮈⮴➥
ttl:

  aaa:
    title: Title
    hex:
      ➥:
        hexParams: attr
        bbb:
      ➥label:
        hexParams: attr
        bbb:
      ⮬label:
        ccc:

hex:

  - aaa:
      label=>:
        hexParams: attr
        bbb:
          =>label3:
            ddd:
      <=label2:
        ccc:

hexQ:  ################# It's better to create visualization first

  query_id:
    title:
    description:
    article:
    hex: # returns all members. Join or intersect - as appointed in Render
      =aaa:
          AND:
            ➥:
              cube:
            OR:
              ➥:
                green:
                red:
            NOT:
              ➥:
                small:



